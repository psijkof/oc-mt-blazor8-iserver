@page "/content/{alias}"

@attribute [StreamRendering]

@using OcBlazorSampleAppLib.Services
@using OrchardCore.ContentManagement.Models

@inject ISiteService SiteService
@inject IContentHandleManager ContenHandleManager
@inject IContentManager ContentManager

<PageTitle>@($"{ContentItem?.DisplayText ?? "(loading)"} - {@Site.SiteName}")</PageTitle>

@if (String.IsNullOrEmpty(Markup))
{
    <p><em>Loading...</em></p>
}
else
{
    <pre>@ContentItem?.DisplayText</pre>
    @((MarkupString)Markup)
}

@code
{
    [ParameterAttribute]
    public string Alias { get; set; } = default!;

    protected ContentItem? ContentItem { get; set; }
    protected string? Markup { get; set; }
    protected ISite Site { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        Site = await SiteService.GetSiteSettingsAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        ContentItem = await ContentItemsService.GetContentItemByAlias(Alias, ContenHandleManager, ContentManager);
        Markup = await ContentItemsService.GetBodyAspect(ContentItem, ContentManager);

    }
}        